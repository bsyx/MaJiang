otherPlayerItem = {};
local this = otherPlayerItem;

this.chuPaiTime = 10.0;   --玩家出牌倒计时

function otherPlayerItem.Awake(obj)
    gameObject = obj;
    transform = obj.transform;
    message = obj:GetComponent("LuaBehaviour");

    this.initComponent();
end

function otherPlayerItem.initComponent()
	this.stateTran = transform:Find("state");
	this.stateText = this.stateTran.gameObject:GetComponent("Text");

	local infoBackTran = transform:Find("infoBack");
	this.nameText = infoBackTran:Find("name").gameObject:GetComponent("Text");
	this.headImg = infoBackTran:Find("head").gameObject:GetComponent("Image");
	this.goldText = infoBackTran:Find("goldValue").gameObject:GetComponent("Text");
	this.progressTran = infoBackTran:Find("progressImg");
	this.progressImg = this.progressTran.gameObject:GetComponent("Image");

	this.jiaoImgTran = transform:Find("jiaoImg");
	this.jiaoText = this.jiaoImgTran:Find("Text").gameObject:GetComponent("Text");
end

function otherPlayerItem.OnEnable()
   local strs = string.split(transform.parent.name, "_");
   this.pos = tonumber(strs[2]);

   this.pkPlayer = PkScene:GetInstance().players[this.pos];
   this.nameText.text = this.pkPlayer.name; 

   this.stateTran.gameObject:SetActive(false);
   this.jiaoImgTran.gameObject:SetActive(false);
end

function otherPlayerItem.Update()
	if(this.isChuPai) then
		this.chuPaiTimeNum = this.chuPaiTimeNum + Time.deltaTime;
		local percent = this.chuPaiTimeNum / this.chuPaiTime;
		this.progressImg.percent = percent;
	end
end

--显示玩家是否现在可以出牌
function otherPlayerItem.ShowChuPai(state)
	this.isChuPai = state;
	this.progressTran.gameObject:SetActive(state);
	this.chuPaiTimeNum = 0.0;
	if(state == true) then
		this.SetPlayerState(2);
	else
		this.SetPlayerState(0);
	end	
end

--显示玩家正在出牌时
function otherPlayerItem.ShowDuringChuPai(state)
	this.isChuPai = state;
	this.progressTran.gameObject:SetActive(state);
	this.chuPaiTimeNum = 0.0;
	if(state == true) then
		this.ShowPlayerState(2);
	else
		this.ShowPlayerState(0);
	end	
end

--显示玩家的状态
function otherPlayerItem.ShowPlayerState(state)
	this.stateTran.gameObject:SetActive(true);
	if(state == 0) then
		this.stateTran.gameObject:SetActive(false);
	elseif(state == 1) then
		this.stateText.text = "准备";
	elseif(state == 2) then
		this.stateText.text = "正在出牌";
	end
end

--显示玩家叫的数字和个数
function otherPlayerItem.ShowJiaoImg(state)
	this.jiaoImgTran.gameObject:SetActive(state);
	this.pkPlayer = PkScene:GetInstance().players[this.pos];
	if(state == true) then
		this.jiaoText.text = tostring(this.pkPlayer.jiaoNum).."个"..tostring(this.pkPlayer.jiaoValue);
	end
end

--生成纸牌
function otherPlayerItem.GeneratePais()
	this.paisTran = {};

	local childCount = this.paiDefaultTran.parent.childCount;
	for i=0,childCount-1 do
		local tran = this.paiDefaultTran.parent:GetChild(i);
		if(tran ~= this.paiDefaultTran) then
			GameObject.Destroy(tran.gameObject);
		end
	end

	for key,pai in pairs(this.pkPlayer.pais) do
		local paiObj = UIManager.newObject(this.paiDefaultTran.gameObject);
		paiObj.transform.parent = this.pkPaisTran;
		UIManager.reset(paiObj);
		paiObj.transform.position = Vector3.New(0.0,0.0,0.0);
		paiObj.transform.localScale = Vector3.New(1.0,1.0,1.0);
		paiObj.transform.localEulerAngles = Vector3.New(0.0,0.0,180.0);
		paiObj.gameObject:SetActive(true);
		this.paisTran[key] = paiObj.transform;
	end

	this.animNum = table.getn(this.pkPlayer.pais);
	local originPos = PkManager.getPosByIndex(this.pos,this.animNum);
	for key,pai in pairs(this.pkPlayer.pais) do
		local targetPos = PkManager.getPaiLocalPosition(key,originPos,this.pos);
		local paiTran = this.paisTran[key];
		DoTweenManager.self:DoLocalMove(paiTran,targetPos,1.0,this.FaPaiAnimFinish,tonumber(key-1) * 1.0,1);
	end
end

--发牌动画结束
function otherPlayerItem.FaPaiAnimFinish(tran)
	
end

--显示玩家出牌的动画
function otherPlayerItem.ShowChuPaiAnim()
	local num = this.pkPlayer.jiaoNum;
	local index = 1;
	for key,tran in pairs(this.paisTran) do
		DoTweenManager.self:DoLocalMove(tran,Vector3.zero,1.0,this.ChuPaiAnimFinish,0.0,1);
	end
end

--出牌动画结束
function otherPlayerItem.ChuPaiAnimFinish(tran)
	
end