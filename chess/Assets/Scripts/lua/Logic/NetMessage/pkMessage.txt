pkMessage = {}
local this = pkMessage;

--注册所有消息回包事件
function pkMessage.RegisterCallBacks()
	EventManager.RegisterEvent(EnterGame,NetManager.OnEnterGame);
	EventManager.RegisterEvent(ReadyPk,NetManager.OnReadyPk);
	EventManager.RegisterEvent(FaPai,NetManager.OnFaPai);
	EventManager.RegisterEvent(Decide,NetManager.OnDecide);
	EventManager.RegisterEvent(ChuPai,NetManager.OnChuPai);
end

--清除所有消息回包事件
function pkMessage.ClearCallBacks()
	EventManager.UnRegisterEvent(EnterGame);
	EventManager.UnRegisterEvent(ReadyPk);
	EventManager.UnRegisterEvent(FaPai);
	EventManager.UnRegisterEvent(Decide);
	EventManager.UnRegisterEvent(ChuPai);
end

--请求进入游戏匹配玩家
function NetManager.SendEnterGame()
	log("=====send enter game=====");
	EventManager.InvokeEvent(SetLoadActive,true);
	local proto = Pk_pb.EnterGameRequest();
	proto.state = true;
    NetManager.SendMessage(301,proto);
end

--请求进入游戏回包
function NetManager.OnEnterGame(data)
	log("=====on enter game=====");
	local proto = Pk_pb.EnterGameResponse();
	local str = NetManager.ParseMessage(data);
	proto:ParseFromString(str);

	PkScene:GetInstance().players = {};
	for key,value in pairs(proto.players) do
		if(tonumber(key)) then
			local pkPlayer = PkPlayer:New();
			pkPlayer.pos = value.pos;
			pkPlayer.name = value.name;
			PkScene:GetInstance().players[value.pos] = pkPlayer;
		end
	end

	local pkPlayers = PkScene:GetInstance().players;
	PkScene:GetInstance().selfPos = PkManager.getSelf(pkPlayers).pos;
	PkScene:GetInstance().players = PkManager.changePlayersPos(pkPlayers,PkScene:GetInstance().selfPos);

	UIManager.createPanel(PkPanel);
end

--请求准备
function NetManager.SendReadyPk()
	log("=====send ready pk=====");
	local proto = Pk_pb.ReadyPkRequest();
	proto.state = true;
    NetManager.SendMessage(302,proto);
end

--请求准备回包
function NetManager.OnReadyPk(data)
	log("=====on ready pk=====");
	local proto = Pk_pb.ReadyPkResponse();
	local str = NetManager.ParseMessage(data);
	proto:ParseFromString(str);

	local pos = PkManager.changePos(proto.index,PkScene:GetInstance().selfPos);
	EventManager.InvokeEvent(UISetPkState,pos);
	if(pos == 1) then
		EventManager.InvokeEvent(UIShowReadyBtn,false);
	end
end

--请求出牌
function NetManager.SendChuPai(jiaoNum,jiaoValue,pais)
	log("=====send chu pai=====num==="..tostring(jiaoNum).."===value==="..tostring(jiaoValue));
	local proto = Pk_pb.ChuPaiRequest();
	proto.num = jiaoNum;
	proto.value = jiaoValue;
	proto.pais = PkManager.convertPaisToStr(pais)
	NetManager.SendMessage(305,proto);
end

--请求决定
function NetManager.SendDecide(decideId)
	log("=====send decide=====");
	local proto = Pk_pb.DecideRequest();
	proto.decide = decideId;
	proto.sceneId = PkScene:GetInstance().sceneId;
    NetManager.SendMessage(304,proto);
end

--请求决定回包
function NetManager.OnDecide(data)
	log("=====on decide=====");
end

--发牌开始回包
function NetManager.OnFaPai(data)
	log("=====on fa pai======");
	local proto = Pk_pb.FaPaiResponse();
	local str = NetManager.ParseMessage(data);
	proto:ParseFromString(str);

	local pkPlayers = PkScene:GetInstance().players;
	for key,pai in pairs(proto.pais) do
		if(tonumber(key)) then
			local pos = PkManager.changePos(pai.pos,PkScene:GetInstance().selfPos);
			local pkPlayer = pkPlayers[pos];
			local pkPai = PkPai:New();
			pkPai.type = pai.type;
			pkPai.value = pai.value;
			table.insert(pkPlayer.pais,pkPai);
		end
	end

	EventManager.InvokeEvent(UIShowReadyBtn,false);
	EventManager.InvokeEvent(UIPkFaPai);
end

--出牌后的回包
function NetManager.OnChuPai(data)
	log("=====on chu pai======");
	local proto = Pk_pb.ChuPaiResponse();
	local str = NetManager.ParseMessage(data);
	proto:ParseFromString(str);

	local originPos = proto.pos;
	local pos = PkManager.changePos(originPos,PkScene:GetInstance().selfPos);
	local pkPlayers = PkScene:GetInstance().players;
	local pkPlayer = pkPlayers[pos];
	pkPlayer.jiaoNum = proto.num;
	pkPlayer.jiaoValue = proto.value;

	EventManager.InvokeEvent(UIShowJiaoImg,pos);
	EventManager.InvokeEvent(UIShowChuPaiAnim,pos);
end